#mtl
${local_namespace("toolchain.uclibc")}

${Package("$(TOOLCHAIN_BUILD_DIR)/uClibc-$(TOOLCHAIN_UCLIBC_VERSION)", "", "0.9.33.2", "http://sources.buildroot.net/uClibc-$(TOOLCHAIN_UCLIBC_VERSION).tar.bz2", "$(ROOTFS_DIR)/lib/libc.so.0")}

${DownloadRule("$(TOOLCHAIN_UCLIBC_URL)")}

${UnpackRule("$(DOWNLOAD_DIR)/$(TOOLCHAIN_UCLIBC_FILE)", "$(TOOLCHAIN_BUILD_DIR)", "$(TOOLCHAIN_UCLIBC_SRC_DIR)/Makefile")}

${PatchRule("$(TOOLCHAIN_UCLIBC_UNPACK)")}

include target/config/$(TARGET).mk

TOOLCHAIN_UCLIBC_CONFIG_FILE := $(TOOLCHAIN_UCLIBC_SRC_DIR)/.config
$(TOOLCHAIN_UCLIBC_CONFIG_FILE): $(TARGET_UCLIBC_CONFIG) $(TOOLCHAIN_UCLIBC_UNPACK)
	$(CP) -a $(TARGET_UCLIBC_CONFIG) $(TOOLCHAIN_UCLIBC_CONFIG_FILE)
	
include toolchain/gcc-static.mk
#Toolchain specific kernel headers
include target/config/$(TARGET)/toolchain/kernel-headers.mk

${MakeRule('CFLAGS="" CXXFLAGS="" PATH=$(GCC-STATIC_PATH)', '', "$(TOOLCHAIN_UCLIBC_BUILD_DIR)", "oldconfig", "$(TOOLCHAIN_UCLIBC_SRC_DIR)/include/config/auto.conf", "$(TOOLCHAIN_UCLIBC_CONFIG_FILE) $(TOOLCHAIN_UCLIBC_PATCHALL)", "TOOLCHAIN_UCLIBC_CONFIG")}

${MakeRule('CFLAGS="" CXXFLAGS="" PATH=$(GCC-STATIC_PATH)', '-j1 CROSS=$(ARCH_TARGET)- CC="$(ARCH_TARGET)-gcc" KERNEL_HEADERS=$(ROOTFS_DIR)/usr/include RUNTIME_PREFIX="$(ROOTFS_DIR)/"', "$(TOOLCHAIN_UCLIBC_BUILD_DIR)", "all", "$(TOOLCHAIN_UCLIBC_BUILD_DIR)/lib/libc.so", "$(TOOLCHAIN_UCLIBC_CONFIG) $(TOOLCHAIN_KERNEL-HEADERS_INSTALL) $(TOOLCHAIN_GCC-STATIC_INSTALL)", "TOOLCHAIN_UCLIBC_BUILD")}

${MakeRule('CFLAGS="" CXXFLAGS="" PATH=$(GCC-STATIC_PATH)', '-j1 CROSS=$(ARCH_TARGET)- CC="$(ARCH_TARGET)-gcc" KERNEL_HEADERS=$(ROOTFS_DIR)/usr/include PREFIX="$(TOOLCHAIN_ROOT_DIR)/uclibc"', "$(TOOLCHAIN_UCLIBC_BUILD_DIR)", "install", "$(TOOLCHAIN_ROOT_DIR)/uclibc/lib/libc.so.0", "$(TOOLCHAIN_UCLIBC_BUILD)", "TOOLCHAIN_UCLIBC_LOCAL-INSTALL", True)}

${Rule('$(ROOTFS_DIR)/lib/libc.so.0', "$(TOOLCHAIN_UCLIBC_LOCAL-INSTALL) $(TOOLCHAIN_KERNEL-HEADERS_INSTALL)", rule_var_name = var_name("install"))}
	$(CP) -R $(TOOLCHAIN_ROOT_DIR)/uclibc/* $(ROOTFS_DIR)/
	
#Menu configuration
uclibc-menuconfig: $(TOOLCHAIN_UCLIBC_CONFIG)
	$(TOOLCHAIN_ENV) $(MAKE) -C $(TOOLCHAIN_UCLIBC_BUILD_DIR) CROSS=$(ARCH_TARGET)- CC="$(ARCH_TARGET)-gcc" KERNEL_HEADERS=$(ROOTFS_DIR)/usr/include RUNTIME_PREFIX="$(ROOTFS_DIR)/" menuconfig
	
.NOTPARALLEL:	